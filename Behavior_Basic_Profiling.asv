%% keep pairs with behaivor
allPairs_behav = {};
for i = 1:length(allPairs)
    for k = 1:length(allPairs{i}{1}.Behavior)
        if ~isempty(allPairs{i}{1}.Behavior{k})
            allPairs_behav = [allPairs_behav, allPairs(i)];
            disp(i)
            break
        end
    end

end

%% Start
all_behav_exp = {'attack','chasing','tussling','threaten','escape','defend',...
    'flinch','general-sniffing','sniff_face','sniff_genital','approach',...
    'follow','interaction', 'socialgrooming', 'mount','dig',...
    'selfgrooming', 'climb', 'exploreobj', 'biteobj', 'stand', 'nesting','human_interfere', 'other'};
social_bv = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];
nonsocial_bv = [17,22,24];
explor_bv = [16,18,19,20,21];
agonist_bv = [1,2,3,4];
defensive_bv = [5,6,7];
nondefensive_social_bv = setdiff(social_bv, defensive_bv);
sniff_bv = [8,9,10];
initiative_bv = [11,12];
allbehav_idx = {social_bv,nonsocial_bv,explor_bv,agonist_bv,defensive_bv,nondefensive_social_bv,sniff_bv,initiative_bv};
hm_interfere = 23;
%% percentage of each behavior category
categorical_bv = cell(1,length(allbehav_idx));
individual_bv = cell(1,24);
animalID = {};
pairID = {};
animalGen = {};
for i = 1:length(allPairs_behav)
    M1 = allPairs_behav{i}{1};
    M2 = allPairs_behav{i}{2};
    if isfield(M1,'GenType')
        Gen1 = M1.GenType;
        Gen2 = M2.GenType;
    else
        Gen1 = 'C57'; Gen2 = 'C57';
    end
    m = intersect(find(~cellfun(@isempty,M1.Behavior)), find(contains(M1.videoInfo.session,'exp')));
    m = m(end);
    % remove human_interfere
    non_human = ~(M1.Behavior{m}.LogicalVecs{hm_interfere} + M2.Behavior{m}.LogicalVecs{hm_interfere});
    % deal with behavior categories
    for j = 1:length(allbehav_idx)
        cur_behav_idx = allbehav_idx{j};
        collapsed_logical_1 = zeros(1,sum(non_human));
        collapsed_logical_2 = collapsed_logical_1;
        for k = cur_behav_idx
            collapsed_logical_1 = collapsed_logical_1 + M1.Behavior{m}.LogicalVecs{k}(non_human);
            collapsed_logical_2 = collapsed_logical_2 + M2.Behavior{m}.LogicalVecs{k}(non_human);
        end
        perct1 = sum(collapsed_logical_1) / length(collapsed_logical_1);
        perct2 = sum(collapsed_logical_2) / length(collapsed_logical_2);
        categorical_bv{j} = [categorical_bv{j};perct1;perct2];
    end
    % deal with individual behaviors
    for j = 1:24 % except human & other
       collapsed_perct_1 = sum(M1.Behavior{m}.LogicalVecs{j}(non_human))/sum(non_human);
       collapsed_perct_2 = sum(M2.Behavior{m}.LogicalVecs{j}(non_human))/sum(non_human);
       individual_bv{j} = [individual_bv{j};collapsed_perct_1;collapsed_perct_2];
    end
    animalID = [animalID;M1.AnimalID;M2.AnimalID];
    animalGen = [animalGen;Gen1;Gen2];
    tempstr = strsplit(M1.ExperimentID,'_');
    pairID = [pairID; tempstr{1};tempstr{1}];
    
end
%% generate table, vars = 6 behav types + 1 gen type + aID
T1 = table(categorical_bv{:}, animalID, animalGen, pairID, 'VariableNames',{'social','nonsocial(idle/groom)','explore','agonist','defensive','nondefensive_social','sniff','initiative','animalID','animalGen','pairID'});
writetable(T1,'categorical_bv_prct.csv');
T2 = table(individual_bv{:}, animalID, animalGen, pairID, 'VariableNames',[all_behav_exp(1:24),'animalID','animalGen','pairID']);
writetable(T2,'individual_bv_prct.csv');
%% 
aggress_marker = double(T1.agonist>=0.02); temp = find(aggress_marker);
for k = 1:numel(temp)
    ff = temp(k);
    if mod(ff,2) & aggress_marker(ff+1)~=1
        aggress_marker(ff+1) = -1;
    elseif ~mod(ff,2) & aggress_marker(ff-1)~=1
        aggress_marker(ff-1) = -1;
    end
end
T1.aggress = aggress_marker; T2.aggress = aggress_marker;
T1.animalGen = categorical(T1.animalGen);
T2.animalGen = categorical(T2.animalGen);
KO_behav_grp = T1(T1.animalGen=='KO',:);
HET_behav_grp = T1(T1.animalGen=='HET',:);
WT_behav_grp = T1(T1.animalGen=='WT',:);
colnames = T1.Properties.VariableNames;
C57_behav_grp = T1(T1.animalGen=='C57',:);
hilight = {KO_behav_grp.aggress==1, HET_behav_grp.aggress==1,WT_behav_grp.aggress==1,C57_behav_grp.aggress==1};
hilight_partner = {KO_behav_grp.aggress==-1, HET_behav_grp.aggress==-1,WT_behav_grp.aggress==-1,C57_behav_grp.aggress==-1};
regular_a = {KO_behav_grp.aggress==0, HET_behav_grp.aggress==0,WT_behav_grp.aggress==0,C57_behav_grp.aggress==0};
figure; tiledlayout(2,4,'TileSpacing','tight','Padding','tight'); 
for i = 1:8
    nexttile; 
    cur_data = {KO_behav_grp.(colnames{i}),HET_behav_grp.(colnames{i}),WT_behav_grp.(colnames{i}),C57_behav_grp.(colnames{i})};
    cur_data_2 = {cur_data{1}(regular_a{1}),cur_data{1}(hilight{1}),cur_data{1}(hilight_partner{1}),...
                cur_data{2}(regular_a{2}),cur_data{2}(hilight{2}),cur_data{2}(hilight_partner{2}),...
                cur_data{3}(regular_a{3}),cur_data{3}(hilight{3}),cur_data{3}(hilight_partner{3}),...
                cur_data{4}(regular_a{4}),cur_data{4}(hilight{4}),cur_data{4}(hilight_partner{4})};
    XZBoxPlot(cur_data_2,[1,2,3,1,2,3,1,2,3,1,2,3],[],{'KO-noagg','KO-agg','KO-agg-partner','HET-noagg','HET-agg','HET-agg-parter','WT-noagg','WT-agg','WT-agg-partner','C57-noagg','C57-agg','C57-agg-partner'},[],gca,'dot'); 
%     for j = 1:length(cur_data)
%         plot(0*cur_data{j}(hilight{j})+j, cur_data{j}(hilight{j}),'r.','MarkerSize',10);
%     end
    title(strrep(colnames{i},'_','-')); ax = gca; ax.XAxis.FontSize = 9;
    xtickangle(30);
end

KO_behav = T2(T2.animalGen=='KO',:);
HET_behav = T2(T2.animalGen=='HET',:);
WT_behav = T2(T2.animalGen=='WT',:);
C57_behav = T2(T2.animalGen=='C57',:);
colnames = T2.Properties.VariableNames;
figure; behav_idx = [1:14,16:19,21,24]; tiledlayout(3,7,"TileSpacing","tight","Padding","tight");
for j = 1:numel(behav_idx)
    i = behav_idx(j);
    nexttile;
    cur_data = {KO_behav.(colnames{i}),HET_behav.(colnames{i}),WT_behav.(colnames{i}),C57_behav.(colnames{i})};
    cur_data = {cur_data{1}(regular_a{1}),cur_data{1}(hilight{1}),cur_data{1}(hilight_partner{1}),...
                cur_data{2}(regular_a{2}),cur_data{2}(hilight{2}),cur_data{2}(hilight_partner{2}),...
                cur_data{3}(regular_a{3}),cur_data{3}(hilight{3}),cur_data{3}(hilight_partner{3}),...
                cur_data{4}(regular_a{4}),cur_data{4}(hilight{4}),cur_data{4}(hilight_partner{4})};
    XZBoxPlot(cur_data,[1,2,3,1,2,3,1,2,3,1,2,3],[],{'KO-noagg','KO-agg','KO-agg-partner','HET-noagg','HET-agg','HET-agg-parter','WT-noagg','WT-agg','WT-agg-partner','C57-noagg','C57-agg','C57-agg-partner'},[],gca,'dot'); 
    title(strrep(colnames{i},'_','-'));
%     for j = 1:length(cur_data)
%         plot(0*cur_data{j}(hilight{j})+j, cur_data{j}(hilight{j}),'r.','MarkerSize',10);
%     end
    xtickangle(30); ax = gca; ax.XAxis.FontSize = 9;
end
% saveas(gcf,'Categorical_interval.png','png');
% saveas(gcf,'Individual_behavior.png','png');

%% Interval between social/nonsocial bouts
interval_from_last = cell(1,length(allbehav_idx));
interval_from_any_last = cell(1,length(allbehav_idx));
for i = 1:length(allPairs_behav)
    M1 = allPairs_behav{i}{1};
    M2 = allPairs_behav{i}{2};
    if isfield(M1,'GenType')
        Gen1 = M1.GenType;
        Gen2 = M2.GenType;
    else
        Gen1 = 'C57';
        Gen2 = 'C57';
    end
    m = intersect(find(~cellfun(@isempty,M1.Behavior)), find(contains(M1.videoInfo.session,'exp')));
    m = m(end);
    M1b = M1.Behavior{m};
    M2b = M2.Behavior{m};
    for j = 1:length(allbehav_idx)
        cur_start1 = [];
        cur_end1 = [];
        cur_start2 = [];
        cur_end2 = [];
        cur_behav_idx = allbehav_idx{j};
        for k = cur_behav_idx
            cur_start1 = [cur_start1,M1b.OnsetTimes{k}];
            cur_end1 = [cur_end1,M1b.OffsetTimes{k}];
            cur_start2 = [cur_start2,M2b.OnsetTimes{k}];
            cur_end2 = [cur_end2,M2b.OffsetTimes{k}];
        end
        cur_start1 = sort(cur_start1); cur_end1 = sort(cur_end1);
        cur_start2 = sort(cur_start2); cur_end2 = sort(cur_end2);
        interval_from_last{j} = [interval_from_last{j}; 1/30*mean(cur_start1(2:end)-cur_end1(1:end-1)); 1/30*mean(cur_start2(2:end)-cur_end2(1:end-1))];
%         interval_from_any_last{j} = [interval_from_any_last{}];
    end
end
%%
T3 = table(interval_from_last{:}, animalID, animalGen,pairID, 'VariableNames',{'social','nonsocial(idle/groom)','explore','agonist','defensive','nondefensive_social','sniff','initiative','animalID','animalGen','pairID'});
%% 
KO_behav_grp = T3(strcmp(T3.animalGen,'KO'),:);
HET_behav_grp = T3(strcmp(T3.animalGen,'HET'),:);
WT_behav_grp = T3(strcmp(T3.animalGen,'WT'),:);
C57_behav_grp = T3(strcmp(T3.animalGen,'C57'),:);
colnames = T3.Properties.VariableNames;
figure; tiledlayout(2,4,'TileSpacing','tight','Padding','tight'); 
for i = 1:8
    nexttile; 
    cur_data = {KO_behav_grp.(colnames{i}),HET_behav_grp.(colnames{i}),WT_behav_grp.(colnames{i}),C57_behav_grp.(colnames{i})};
    cur_data = {cur_data{1}(regular_a{1}),cur_data{1}(hilight{1}),cur_data{1}(hilight_partner{1}),...
        cur_data{2}(regular_a{2}),cur_data{2}(hilight{2}),cur_data{2}(hilight_partner{2}),...
        cur_data{3}(regular_a{3}),cur_data{3}(hilight{3}),cur_data{3}(hilight_partner{3}),...
        cur_data{4}(regular_a{4}),cur_data{4}(hilight{4}),cur_data{4}(hilight_partner{4})};
    XZBoxPlot(cur_data,[1,2,3,1,2,3,1,2,3,1,2,3],[],{'KO-noagg','KO-agg','KO-agg-partner','HET-noagg','HET-agg','HET-agg-parter','WT-noagg','WT-agg','WT-agg-partner','C57-noagg','C57-agg','C57-agg-partner'},[],gca,'dot'); 
    ax = gca; ax.XAxis.FontSize = 10; title(strrep(colnames{i},'_','-'));
    ylabel('Interval (s)')
end
% saveas(gcf,'Interval.png','png');
%% get index of het-ko, ko-ko, ko-wt pairs
hetko = [];
koko = [];
kowt = [];
hethet = [];
hetwt = [];
wtwt = [];

for i = 1:length(allPairs_behav)
    if isfield(allPairs_behav{i}{1},'GenType')
        gentype = sort({allPairs_behav{i}{1}.GenType,allPairs_behav{i}{2}.GenType});
    else
        gentype = {'C57','C57'};
        cc = [cc; i];
    end

    if strcmp(gentype{1},'HET')
        if strcmp(gentype{2},'HET')
            hethet = [hethet,i];
        elseif strcmp(gentype{2},'KO')
            hetko = [hetko,i];
        else
            hetwt = [hetwt,i];
        end
    elseif strcmp(gentype{1},'KO')
        if strcmp(gentype{2},'KO')
            koko = [koko,i];
        elseif strcmp(gentype{2},'WT')
            kowt = [kowt, i];
        end
    elseif strcmp(gentype{1},'WT')
        wtwt = [wtwt; i];
    end
end
genidx = {hetko, koko, kowt,hethet, hetwt,wtwt};
%% plot T1/T2 on pair basis
T1.ExpIdx = ceil((1:size(T1,1))/2)';
KOKO_grp = sortrows(T1([koko*2-1, koko*2],:),{'animalGen','ExpIdx'});
HETKO_grp = sortrows(T1([hetko*2-1,hetko*2],:),{'animalGen','ExpIdx'});
KOWT_grp = sortrows(T1([kowt*2-1,kowt*2],:),{'animalGen','ExpIdx'});
HETHET_grp = sortrows(T1([hethet*2-1,hethet*2],:),{'animalGen','ExpIdx'});
HETWT_grp = sortrows(T1([hetwt*2-1,hetwt*2],:),{'animalGen','ExpIdx'});

colnames = T1.Properties.VariableNames;
colors = [0.7,0,0 ;0.3,0.3,0; 0.7,0.7,0; 0,0.5,0.5; 0,1,1; 0,0.7,0; 0.7,0,0.7; 1,0,1;];
figure; tiledlayout(2,4,'TileSpacing','tight','Padding','tight');
for i = 1:8
    nexttile;
    cur_data = {KOKO_grp.(colnames{i}), HETKO_grp(and(HETKO_grp.aggress==0, HETKO_grp.animalGen=='KO'),:).(colnames{i}),HETKO_grp(and(HETKO_grp.aggress==0, HETKO_grp.animalGen=='HET'),:).(colnames{i}),...
        HETKO_grp(and(HETKO_grp.aggress~=0, HETKO_grp.animalGen=='KO'),:).(colnames{i}),HETKO_grp(and(HETKO_grp.aggress~=0, HETKO_grp.animalGen=='HET'),:).(colnames{i}),...
        KOWT_grp(and(KOWT_grp.aggress==0, KOWT_grp.animalGen=='KO'),:).(colnames{i}),KOWT_grp(and(KOWT_grp.aggress==0, KOWT_grp.animalGen=='WT'),:).(colnames{i}),...
        KOWT_grp(and(KOWT_grp.aggress~=0, KOWT_grp.animalGen=='KO'),:).(colnames{i}),KOWT_grp(and(KOWT_grp.aggress~=0, KOWT_grp.animalGen=='WT'),:).(colnames{i}),HETHET_grp.(colnames{i}),...
        HETWT_grp(and(HETWT_grp.aggress==0,HETWT_grp.animalGen=='HET'),:).(colnames{i}),HETWT_grp(and(HETWT_grp.aggress==0,HETWT_grp.animalGen=='WT'),:).(colnames{i}),...
        HETWT_grp(and(HETWT_grp.aggress~=0,HETWT_grp.animalGen=='HET'),:).(colnames{i}),HETWT_grp(and(HETWT_grp.aggress~=0,HETWT_grp.animalGen=='WT'),:).(colnames{i})};

    XZBoxPlot(cur_data,[1,2,2,3,3,4,4,5,5,6,7,7,8,8],[],{'KOKO','HETKO-KO-reg','HETKO-HET-reg','HETKO-KO-agg','HETKO-HET-agg','KOWT-KO-reg','KOWT-WT-reg','KOWT-KO-agg','KOWT-WT-agg','HETHET','HETWT-HET-reg','HETWT-WT-reg','HETWT-HET-agg','HETWT-WT-agg'},[],gca,'line'); 
    title(strrep(colnames{i},'_','-')); ax = gca; ax.XAxis.FontSize = 10;
%     ax.NextPlot = 'add';
%     % add points
%     for j = 1:length(cur_data)
%         plot(0*cur_data{j}+j, cur_data{j},'k.','MarkerSize',10);
%     end
%     % add lines
%     for j = [2,4,7]
%         for k = 1:numel(cur_data{j})
%             plot([j,j+1], [cur_data{j}(k),cur_data{j+1}(k)],'k-');
%         end
%     end
end
saveas(gcf, 'Categorical_by_genTypes.png','png');
%% PLSC variance explained & power distribution across behaviors
T1.PLSC1_social = zeros(size(T1,1),1);
T1.PLSC1_varfrac = zeros(size(T1,1),1);
T1.PLSC2_social = zeros(size(T1,1),1);
T1.PLSC2_varfrac = zeros(size(T1,1),1);
T1.PLSC1_social_pow = zeros(size(T1,1),1);
T1.PLSC2_social_pow = zeros(size(T1,1),1);
PLSC1var = cell(1,numel(genidx));
PLSC1social = cell(1,numel(genidx));
colnames = {'PLSC1_varfrac','PLSC1_social','PLSC1_social_pow','PLSC2_varfrac','PLSC2_social','PLSC2_social_pow'};
% hetko, koko, kowt,hethet, hetwt
for j = 1:numel(allPairs_behav)
        m = find(~cellfun(@isempty,allPairs_behav{j}{1}.Behavior));
        M1 = allPairs_behav{j}{1};
        M2 = allPairs_behav{j}{2};
        M1FTrace = M1.MS{m}.FiltTraces;
        M2FTrace = M2.MS{m}.FiltTraces;
        mlen = min(size(M1FTrace,1), size(M2FTrace,1));
        [PLSC1, PLSC2] = GetPLSC(M1FTrace(1:mlen,:),M2FTrace(1:mlen,:));
        varPLSC1 = diag(PLSC1'*PLSC1); varPLSC2 = diag(PLSC2'*PLSC2);
        T1.PLSC1_varfrac(j*2-1) = varPLSC1(1)/sum(varPLSC1); T1.PLSC1_varfrac(j*2) = varPLSC2(1)/sum(varPLSC2);
        T1.PLSC2_varfrac(j*2-1) = varPLSC1(2)/sum(varPLSC1); T1.PLSC2_varfrac(j*2) = varPLSC2(2)/sum(varPLSC2);
        social_logical1 = logical(sum(cat(1,M1.Behavior{m}.LogicalVecs{social_bv}(M1.TimeStamp.mapTs{m})),1));
        social_logical2 = logical(sum(cat(1,M2.Behavior{m}.LogicalVecs{social_bv}),1));
        PLSC1_1 = PLSC1(:,1); PLSC2_1 = PLSC2(:,1);
        PLSC1_2 = PLSC1(:,2); PLSC2_2 = PLSC2(:,2);
        T1.PLSC1_social_pow(j*2-1) = sum((PLSC1_1(social_logical1(1:mlen))-mean(PLSC1_1)).^2)/sum(social_logical1(1:mlen));%sum((PLSC1_1-mean(PLSC1_1)).^2);
        T1.PLSC1_social_pow(j*2) = sum((PLSC2_1(social_logical2(1:mlen))-mean(PLSC2_1)).^2)/sum(social_logical2(1:mlen));%sum((PLSC2_1-mean(PLSC2_1)).^2);
        T1.PLSC2_social_pow(j*2-1) = sum((PLSC1_2(social_logical1(1:mlen))-mean(PLSC1_2)).^2)/sum(social_logical1(1:mlen));%sum((PLSC1_2-mean(PLSC1_2)).^2);
        T1.PLSC2_social_pow(j*2) = sum((PLSC2_2(social_logical2(1:mlen))-mean(PLSC2_2)).^2)/sum(social_logical2(1:mlen));%sum((PLSC2_2-mean(PLSC2_2)).^2);
        T1.PLSC1_social(j*2-1) = sum((PLSC1_1(social_logical1(1:mlen))-mean(PLSC1_1)).^2)/sum((PLSC1_1-mean(PLSC1_1)).^2);
        T1.PLSC1_social(j*2) = sum((PLSC2_1(social_logical2(1:mlen))-mean(PLSC2_1)).^2)/sum((PLSC2_1-mean(PLSC2_1)).^2);
        T1.PLSC2_social(j*2-1) = sum((PLSC1_2(social_logical1(1:mlen))-mean(PLSC1_2)).^2)/sum((PLSC1_2-mean(PLSC1_2)).^2);
        T1.PLSC2_social(j*2) = sum((PLSC2_2(social_logical2(1:mlen))-mean(PLSC2_2)).^2)/sum((PLSC2_2-mean(PLSC2_2)).^2);
        % calculate within social frames the fraction of PLSC1 variance
        PLSCvar1 = diag(PLSC1(social_logical1,:)'*PLSC1(social_logical1,:));
        PLSCvar2 = diag(PLSC2(social_logical2,:)'*PLSC2(social_logical2,:));
        T1.social_PLSC1(j*2-1) = PLSCvar1(1)/sum(PLSCvar1); T1.social_PLSC2(j*2-1) = PLSVvar1(2)/sum(PLSCvar1);
        T1.social_PLSC1(j*2) = PLSCvar2(1)/sum(PLSCvar2); T1.social_PLSC2(j*2) = PLSCva2(2)/sum(PLSCvar2);
        
    end
%% 

% XZBoxPlot(PLSC1var,[],[2,1,3,4,5],{'hetko','koko','kowt','hethet','hetwt'},[]);title('Fraction of variance in PLSC1'); saveas(gcf,'F_variance_PLSC1.png','png');
% XZBoxPlot(PLSC1social,[],[2,1,3,4,5],{'hetko','koko','kowt','hethet','hetwt'},[]); title('Average power in social frames'); saveas(gcf,'avgSocialPower.png','png');
KOKO_grp = sortrows(T1([koko*2-1, koko*2],:),{'animalGen','ExpIdx'});
HETKO_grp = sortrows(T1([hetko*2-1,hetko*2],:),{'animalGen','ExpIdx'});
KOWT_grp = sortrows(T1([kowt*2-1,kowt*2],:),{'animalGen','ExpIdx'});
HETHET_grp = sortrows(T1([hethet*2-1,hethet*2],:),{'animalGen','ExpIdx'});
HETWT_grp = sortrows(T1([hetwt*2-1,hetwt*2],:),{'animalGen','ExpIdx'});
figure; tiledlayout(2,3,'TileSpacing','tight','Padding','tight');
titles = {'PLSC1 fraction of total variance', 'fraction of variance in social frames in PLSC1', 'average (per frame) PLSC1 power of social frames',...
    'PLSC2 fraction of total variance', 'fraction of variance in social frames in PLSC2', 'average (per frame) PLSC2 power of social frames'};
for i = 1:6
    nexttile;
    cur_data = {KOKO_grp.(colnames{i}), HETKO_grp(and(HETKO_grp.aggress==0, HETKO_grp.animalGen=='KO'),:).(colnames{i}),HETKO_grp(and(HETKO_grp.aggress==0, HETKO_grp.animalGen=='HET'),:).(colnames{i}),...
        HETKO_grp(and(HETKO_grp.aggress~=0, HETKO_grp.animalGen=='KO'),:).(colnames{i}),HETKO_grp(and(HETKO_grp.aggress~=0, HETKO_grp.animalGen=='HET'),:).(colnames{i}),...
        KOWT_grp(and(KOWT_grp.aggress==0, KOWT_grp.animalGen=='KO'),:).(colnames{i}),KOWT_grp(and(KOWT_grp.aggress==0, KOWT_grp.animalGen=='WT'),:).(colnames{i}),...
        KOWT_grp(and(KOWT_grp.aggress~=0, KOWT_grp.animalGen=='KO'),:).(colnames{i}),KOWT_grp(and(KOWT_grp.aggress~=0, KOWT_grp.animalGen=='WT'),:).(colnames{i}),HETHET_grp.(colnames{i}),...
        HETWT_grp(and(HETWT_grp.aggress==0,HETWT_grp.animalGen=='HET'),:).(colnames{i}),HETWT_grp(and(HETWT_grp.aggress==0,HETWT_grp.animalGen=='WT'),:).(colnames{i}),...
        HETWT_grp(and(HETWT_grp.aggress~=0,HETWT_grp.animalGen=='HET'),:).(colnames{i}),HETWT_grp(and(HETWT_grp.aggress~=0,HETWT_grp.animalGen=='WT'),:).(colnames{i})};

    XZBoxPlot(cur_data,[1,2,2,3,3,4,4,5,5,6,7,7,8,8],[],{'KOKO','HETKO-KO-reg','HETKO-HET-reg','HETKO-KO-agg','HETKO-HET-agg','KOWT-KO-reg','KOWT-WT-reg','KOWT-KO-agg','KOWT-WT-agg','HETHET','HETWT-HET-reg','HETWT-WT-reg','HETWT-HET-agg','HETWT-WT-agg'},[],gca,'line'); 
    title(titles{i});
    ax = gca; ax.XLabel.FontSize = 10;
   

end
                